{"version":3,"sources":["logo.svg","components/BabylonScene.js","components/Playground.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","window","earcut","BabylonScene","onResizeWindow","engine","resize","onCanvasLoaded","c","canvas","preventDefault","e","onwheel","onmousewheel","focus","onKeyDown","props","onKeyUp","this","Engine","antialias","engineOptions","adaptToDeviceRatio","scene","Scene","onSceneMount","runRenderLoop","onRender","render","addEventListener","removeEventListener","ref","style","width","height","outline","React","Component","defaultProps","SHOW_WORLD_AXIS","Playground","gravityVector","Vector3","physicsPlugin","CannonJSPlugin","enablePhysics","camera","createCamera","createLights","createDirectionalLight","createHemisphericLight","createStaticMesh","showWorldAxis","size","onPlayerHitEgg","main","collided","egg","physicsImpostor","dispose","parent","player","position","onPlayerHitGround","object","y","changePlayerModel","walking","Math","abs","getLinearVelocity","touching","onSpacePressed","flapping","resetPlayerVelocity","sendPlayerFlapImpulse","key","keyDirection","rotatePlayer","setLowPlayerFriction","startPlayerMoveInterval","playerHasEgg","console","log","launchEgg","endPlayerMoveInterval","setHighPlayerFriction","flying","vel","z","setLinearVelocity","setAngularVelocity","rotation","LinesBuilder","CreateLines","points","Zero","color","Color3","levelHeight","levelWidth","levelDepth","ArcRotateCamera","PI","fov","minZ","skyMaterial","SkyMaterial","backFaceCulling","luminance","inclination","azimuth","BoxBuilder","CreateBox","material","direct","DirectionalLight","intensity","sg","ShadowGenerator","usePoissonSampling","HemisphericLight","flickers","Map","i","light","SpotLight","ssg","diffuse","startLightFlicker","interval","setInterval","flickerLight","clone","now","Date","angle","zAngle","intensityAngle","cos","x","sin","loadModels","concreteMaterial","createConcreteMaterial","pbr","createBricksMaterial","land","createGround","createFloor","ceiling","createCeiling","createLeftWall","createRightWall","createBackWall","createFrontWall","platform","createPlatform","createEgg","createPlayer","GroundBuilder","CreateGround","sideOrientation","Mesh","DOUBLESIDE","PhysicsImpostor","PlaneImpostor","mass","restitution","stiffness","friction","visibility","faceUV","getBoxWrapUV","floor","depth","receiveShadows","BoxImpostor","leftWall","wallWidth","rightWall","PBRMaterial","forceIrradianceInFragment","albedoTexture","Texture","bumpTexture","useRoughnessFromMetallicTextureAlpha","useRoughnessFromMetallicTextureGreen","useMetallnessFromMetallicTextureBlue","metallicTexture","invertNormalMapX","invertNormalMapY","CreateGroundFromHeightMap","subdivisions","maxHeight","onReady","backWall","tmpBackWall","createBackWallGrid","wallHeight","newWall","createInstance","frontWall","PlaneBuilder","CreatePlane","textureSize","Array","Vector4","getShadowMap","renderList","push","defaultMaterial","StandardMaterial","diffuseColor","SphereBuilder","CreateSphere","diameter","segments","direction","lastQuaternion","model","rotationQuaternion","axis","quaternion","Quaternion","RotationAxis","assetsNum","SceneLoader","ImportMesh","meshes","walkingLeft","checkAssets","message","running","addChild","SphereImpostor","registerOnPhysicsCollide","setEggImpostor","attachCameraToPlayer","boost","getBoost","applyImpulse","getAbsolutePosition","accelerateInterval","self","accelerate","apply","clearInterval","getChildren","includes","isNotSpeeding","isTouchingGround","sendPlayerStepImpulse","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.87dd7b62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Engine } from '@babylonjs/core/Engines/engine'\r\nimport { Scene } from '@babylonjs/core/scene'\r\n\r\n// pepjs needed for babylon touch event\r\nimport 'pepjs'\r\n\r\n// earcut needed by babylon's polygon extruder\r\nimport earcut from 'earcut'\r\nwindow.earcut = earcut\r\n\r\nclass BabylonScene extends React.Component {\r\n  static propTypes = {\r\n    engineOptions: PropTypes.object,\r\n    antialias: PropTypes.bool,\r\n    adaptToDeviceRatio: PropTypes.bool,\r\n    onSceneMount: PropTypes.func.isRequired,\r\n    onKeyDown: PropTypes.func.isRequired,\r\n    onRender: PropTypes.func.isRequired,\r\n    onKeyUp: PropTypes.func.isRequired\r\n  }\r\n\r\n  static defaultProps = {\r\n    antialias: true,\r\n    adaptToDeviceRatio: false\r\n  }\r\n\r\n  componentDidMount () {\r\n    // setup engine\r\n    this.engine = new Engine(\r\n      this.canvas,\r\n      this.props.antialias,\r\n      this.props.engineOptions,\r\n      this.props.adaptToDeviceRatio\r\n    )\r\n    // create scene\r\n    this.scene = new Scene(this.engine)\r\n    \r\n    // call scene mounted handler\r\n    this.props.onSceneMount({\r\n      scene: this.scene,\r\n      engine: this.engine,\r\n      canvas: this.canvas\r\n    });\r\n    // start render loop\r\n    this.engine.runRenderLoop(() => {\r\n      if (this.scene) {\r\n        this.props.onRender();\r\n        this.scene.render()\r\n      }\r\n    })\r\n    // handle resize\r\n    window.addEventListener('resize', this.onResizeWindow)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    window.removeEventListener('resize', this.onResizeWindow)\r\n  }\r\n\r\n  onResizeWindow = () => {\r\n    if (this.engine) {\r\n      this.engine.resize()\r\n    }\r\n  }\r\n\r\n  onCanvasLoaded = c => {\r\n    if (c !== null) {\r\n      this.canvas = c\r\n      // avoid page scrolling\r\n      const preventDefault = e => e.preventDefault()\r\n      this.canvas.onwheel = preventDefault\r\n      this.canvas.onmousewheel = preventDefault\r\n      this.canvas.focus();\r\n    }\r\n  }\r\n  onKeyDown = (e) => {\r\n    this.props.onKeyDown(e);\r\n  }\r\n  onKeyUp = (e) => {\r\n    this.props.onKeyUp(e);\r\n  }\r\n  render () {\r\n    return (\r\n      <canvas\r\n        ref={this.onCanvasLoaded}\r\n        onKeyDown={this.onKeyDown}\r\n        onKeyUp={this.onKeyUp}\r\n        style={{ width: '100%', height: '100%', outline: 'none' }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default BabylonScene\r\n","import React from 'react'\r\n//import * as cannon from 'cannon';\r\nimport { CannonJSPlugin } from '@babylonjs/core/Physics/Plugins/cannonJSPlugin'\r\nimport { PhysicsImpostor } from '@babylonjs/core/Physics/physicsImpostor'\r\nimport { Vector3, Color3,Vector4,Quaternion } from '@babylonjs/core/Maths/math'\r\nimport { ArcRotateCamera } from '@babylonjs/core/Cameras/arcRotateCamera'\r\nimport { DirectionalLight } from '@babylonjs/core/Lights/directionalLight'\r\nimport { SpotLight } from '@babylonjs/core/Lights/spotLight'\r\nimport { PointLight } from '@babylonjs/core/Lights/pointLight'\r\nimport { HemisphericLight } from '@babylonjs/core/Lights/hemisphericLight'\r\nimport { ShadowGenerator } from '@babylonjs/core/Lights/Shadows/shadowGenerator'\r\nimport { ShadowGeneratorSceneComponent } from '@babylonjs/core/Lights/Shadows/shadowGeneratorSceneComponent'\r\nimport {SceneLoader} from '@babylonjs/core/Loading/';\r\n\r\n\r\nimport { StandardMaterial } from '@babylonjs/core/Materials/standardMaterial'\r\nimport { PBRMaterial } from '@babylonjs/core/Materials/PBR/pbrMaterial'\r\nimport { PBRMetallicRoughnessMaterial } from '@babylonjs/core/Materials/PBR/pbrMetallicRoughnessMaterial'\r\nimport { Texture } from '@babylonjs/core/Materials/Textures/texture'\r\n\r\nimport { LinesBuilder } from '@babylonjs/core/Meshes/Builders/linesBuilder'\r\nimport { PlaneBuilder } from '@babylonjs/core/Meshes/Builders/planeBuilder'\r\nimport { GroundBuilder } from '@babylonjs/core/Meshes/Builders/groundBuilder'\r\n\r\nimport { SphereBuilder } from '@babylonjs/core/Meshes/Builders/sphereBuilder'\r\nimport { BoxBuilder } from '@babylonjs/core/Meshes/Builders/boxBuilder'\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh'\r\n\r\nimport { SkyMaterial } from '@babylonjs/materials/sky'\r\n// required babylon side effects\r\nimport '@babylonjs/core/Animations/animatable'\r\nimport '@babylonjs/core/Physics/physicsEngineComponent'\r\n\r\n\r\nimport BabylonScene from './BabylonScene'\r\n\r\nconst SHOW_WORLD_AXIS = false;\r\nconst ATTACH_CAMERA = true;\r\n\r\nclass Playground extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.keyDirection = 0;\r\n    this.touching = true;\r\n    this.levelHeight = 40;\r\n    this.levelWidth = 150;\r\n    this.levelDepth = 4;\r\n  }\r\n\r\n  \r\n  // scene setup\r\n  onSceneMount = ({ canvas, scene, engine }) => {\r\n    window.scene = scene // for debug\r\n    this.scene = scene;\r\n    const gravityVector = new Vector3(0,-9.81, 0);\r\n    const physicsPlugin = new CannonJSPlugin();\r\n    scene.enablePhysics(gravityVector, physicsPlugin);\r\n    // camera\r\n    this.camera = this.createCamera(scene,canvas);\r\n    // sky (https://doc.babylonjs.com/extensions/sky)\r\n    //this.createSky(scene);\r\n    // create light\r\n    this.createLights(scene);\r\n    this.createDirectionalLight(scene);\r\n    this.createHemisphericLight(scene);\r\n    // scene\r\n    this.createStaticMesh(scene)\r\n    // debug\r\n    if (SHOW_WORLD_AXIS) {\r\n      this.showWorldAxis({ size: 5, scene })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  createCamera(scene,canvas){\r\n    const camera = new ArcRotateCamera(\r\n      'arc-camera',\r\n      -Math.PI/2,\r\n      Math.PI/2,\r\n      60,\r\n      new Vector3(0,0,0),\r\n      scene\r\n    )\r\n    camera.fov = 0.6;\r\n    if(!ATTACH_CAMERA){\r\n      camera.setTarget(Vector3.Zero())\r\n      camera.attachControl(canvas, true)\r\n    }\r\n    camera.minZ = 0;\r\n    //camera.keysUp = [];camera.keysDown = [];\r\n    return camera;\r\n  }\r\n\r\n  createSky(scene){\r\n    const skyMaterial = new SkyMaterial('sky-material', scene)\r\n    skyMaterial.backFaceCulling = false\r\n    skyMaterial.luminance = 1\r\n    skyMaterial.inclination = 0.3\r\n    skyMaterial.azimuth = .4\r\n    const skybox = BoxBuilder.CreateBox('skybox', { size: 1000 }, scene)\r\n    skybox.material = skyMaterial\r\n  }\r\n\r\n  createDirectionalLight(scene){\r\n    const direct = new DirectionalLight(\"direct\",new Vector3(-1,-3,3),scene);\r\n    direct.intensity = 2.5;\r\n    direct.position = new Vector3(10,this.levelHeight,-10);\r\n    this.sg = new ShadowGenerator(1024,direct);\r\n    this.sg.usePoissonSampling = true;\r\n  }\r\n\r\n  createHemisphericLight(scene){\r\n    const hemi = new HemisphericLight(\"hemi\",new Vector3(0,0,-1),scene);\r\n    hemi.intensity = .15;\r\n  }\r\n\r\n  createLights(scene){\r\n    const num = 2;\r\n    this.flickers = new Map();\r\n    for(let i = 1;i<=num;i++){\r\n      const light = new SpotLight('pointlight'+i,\r\n        new Vector3(\r\n          this.levelWidth*i/num-3*this.levelWidth/4,\r\n          this.levelHeight/2,\r\n          this.levelDepth/2-1.5\r\n        ),\r\n        new Vector3(0,1,.3),\r\n        Math.PI,\r\n        10, scene);\r\n      console.log(light);\r\n      this.ssg = new ShadowGenerator(512,light);\r\n      this.ssg.usePoissonSampling = true;\r\n      //light.range = 5;\r\n      light.diffuse = new Color3(1,0.4,0.2);\r\n      light.intensity = 500;\r\n      this.startLightFlicker(light);\r\n    }\r\n  }\r\n\r\n  startLightFlicker(light){\r\n    this.flickers[light] = {\r\n      interval:setInterval(()=>this.flickerLight(light),50),\r\n      position:light.position.clone()\r\n    };\r\n  }\r\n\r\n  //TODO make it more natural / random\r\n  flickerLight(light){\r\n    const now = Date.now();\r\n    const angle = now*Math.PI/600;\r\n    const zAngle = now*Math.PI/400;\r\n    const intensityAngle = now*Math.PI/100;\r\n    light.intensity = 400 + Math.cos(intensityAngle)*50\r\n    light.position.x = this.flickers[light].position.x + Math.cos(angle)/8;\r\n    light.position.z = this.flickers[light].position.z - Math.sin(zAngle)/8;\r\n  }\r\n\r\n  createStaticMesh (scene){\r\n    this.loadModels(scene);\r\n    this.concreteMaterial = this.createConcreteMaterial(scene);\r\n    this.pbr = this.createBricksMaterial(scene);\r\n    this.land = this.createGround(scene);\r\n    this.createFloor(scene);\r\n    this.ceiling = this.createCeiling(scene);\r\n    this.createLeftWall(scene);\r\n    this.createRightWall(scene);\r\n    this.createBackWall(scene);\r\n    this.createFrontWall(scene);\r\n    this.platform = this.createPlatform(scene);    \r\n    this.egg = this.createEgg(scene);\r\n    this.player = this.createPlayer(scene);\r\n    //this.setEggImpostor();\r\n  }\r\n\r\n  createGround(scene){\r\n    const land = GroundBuilder.CreateGround(\r\n      'land',\r\n      { \r\n        width: this.levelWidth,\r\n        height: this.levelDepth,\r\n        sideOrientation: Mesh.DOUBLESIDE\r\n      },\r\n      scene\r\n    );\r\n    //land.material = defaultMaterial;\r\n    land.physicsImpostor = new PhysicsImpostor(\r\n      land,\r\n      PhysicsImpostor.PlaneImpostor,\r\n      {mass:0, restitution: 0,stiffness:0,friction:1},\r\n      scene\r\n    );\r\n    land.visibility = 0;\r\n    return land;\r\n  }\r\n\r\n  createFloor(scene){\r\n    const faceUV = this.getBoxWrapUV(this.levelWidth,2,this.levelDepth,5);\r\n    const floor = BoxBuilder.CreateBox(\r\n      'land',\r\n      { \r\n        width: this.levelWidth,\r\n        height: 2,\r\n        depth:this.levelDepth,\r\n        sideOrientation: Mesh.DOUBLESIDE,\r\n        faceUV:faceUV\r\n      },\r\n      scene\r\n    )\r\n    //floor.rotation.x = Math.PI/2;\r\n    floor.position.y = -1;\r\n    floor.material = this.concreteMaterial;\r\n    floor.receiveShadows = true;\r\n  }\r\n\r\n  createCeiling(scene){\r\n    const wallHeight = 2;\r\n    const faceUV = this.getBoxWrapUV(this.levelWidth,wallHeight,this.levelDepth,5);\r\n    const ceiling = BoxBuilder.CreateBox(\r\n      'ceiling',\r\n      { width: this.levelWidth,\r\n        depth: this.levelDepth,\r\n        height: wallHeight,\r\n        faceUV:faceUV\r\n      },\r\n      scene\r\n    )\r\n    \r\n    ceiling.position.y = 40 + wallHeight/2;\r\n    ceiling.material = this.concreteMaterial;\r\n    ceiling.physicsImpostor = new PhysicsImpostor(\r\n      ceiling,\r\n      PhysicsImpostor.BoxImpostor,\r\n      {mass:0},\r\n      scene\r\n    );\r\n    return ceiling;\r\n  }\r\n\r\n  createLeftWall(scene){\r\n    const wallWidth = 2;\r\n    const faceUV = this.getBoxWrapUV(wallWidth,this.levelHeight,this.levelDepth,5);\r\n    const leftWall = BoxBuilder.CreateBox(\r\n      'leftWall',\r\n      { width: wallWidth,\r\n        depth: this.levelDepth,\r\n        height: this.levelHeight,\r\n        faceUV:faceUV\r\n      },\r\n      scene\r\n    );\r\n    leftWall.position.y = this.levelHeight/2;\r\n    leftWall.position.x = -this.levelWidth/2 + wallWidth/2;\r\n    leftWall.material = this.concreteMaterial;\r\n    leftWall.physicsImpostor = new PhysicsImpostor(\r\n      leftWall,\r\n      PhysicsImpostor.BoxImpostor,\r\n      {mass:0, restitution: 0.9},\r\n      scene\r\n    );\r\n    leftWall.receiveShadows = true;\r\n  }\r\n\r\n  createRightWall(scene){\r\n    const wallWidth = 2;\r\n    const faceUV = this.getBoxWrapUV(wallWidth,this.levelHeight,this.levelDepth,5);\r\n    const rightWall = BoxBuilder.CreateBox(\r\n      'rightWall',\r\n      { width: wallWidth,\r\n        depth: this.levelDepth,\r\n        height: this.levelHeight,\r\n        faceUV:faceUV\r\n      },\r\n      scene\r\n    )\r\n    rightWall.position.y = this.levelHeight/2;\r\n    rightWall.position.x = this.levelWidth/2 - wallWidth/2;;\r\n    rightWall.material = this.concreteMaterial;\r\n    rightWall.physicsImpostor = new PhysicsImpostor(\r\n      rightWall,\r\n      PhysicsImpostor.BoxImpostor,\r\n      {mass:0, restitution: 0.9},\r\n      scene\r\n    );\r\n    rightWall.receiveShadows = true;\r\n  }\r\n\r\n  createBricksMaterial(scene){\r\n    const pbr = new PBRMaterial('bricks', scene);\r\n    pbr.forceIrradianceInFragment = true;\r\n    pbr.albedoTexture = new Texture(\"textures/bricks_rustic_albedo.png\", scene);\r\n    pbr.bumpTexture = new Texture(\"textures/bricks_rustic_normal.png\", scene);\r\n    pbr.useRoughnessFromMetallicTextureAlpha = false;\r\n    pbr.useRoughnessFromMetallicTextureGreen = true;\r\n    pbr.useMetallnessFromMetallicTextureBlue = true;\r\n    pbr.metallicTexture = new Texture(\r\n      \"textures/bricks_rustic_metallic_roughness.png\",\r\n      scene\r\n    );\r\n    pbr.invertNormalMapX = true;\r\n    pbr.invertNormalMapY = true;\r\n    return pbr;\r\n  }\r\n\r\n  createBackWall(scene){\r\n    const wallWidth = 20;\r\n    const wallHeight = 20;\r\n    const backWall = GroundBuilder.CreateGroundFromHeightMap(\r\n      'backWall','textures/bricks_rustic_height.png',\r\n      { height:  wallHeight,width:wallWidth,\r\n        subdivisions:200,maxHeight:0.2,\r\n        onReady:(backWall)=>{\r\n          backWall.rotation.x= -Math.PI/2;\r\n    \r\n          backWall.material = this.pbr;\r\n          backWall.receiveShadows = true;\r\n          //this.ssg.getShadowMap().renderList.push(backWall);\r\n          const tmpBackWall = this.createBackWallGrid(\r\n            backWall,\r\n            scene,\r\n            wallWidth,\r\n            wallHeight\r\n          );\r\n          tmpBackWall.position.z = this.levelDepth/2;\r\n          tmpBackWall.position.y = this.levelHeight/2 - wallHeight/2;\r\n          tmpBackWall.position.x= -this.levelWidth/2;\r\n          tmpBackWall.physicsImpostor = new PhysicsImpostor(\r\n            tmpBackWall,\r\n            PhysicsImpostor.BoxImpostor,\r\n            {mass:0, restitution: 0.1,friction:0.01},\r\n            scene\r\n          );\r\n        }\r\n      },\r\n      scene\r\n    );\r\n    \r\n  }\r\n\r\n  createBackWallGrid(backWall,scene,wallWidth,wallHeight){\r\n    const tmpBackWall = new Mesh(\"tmpBackWall\",scene);\r\n    for(let x = 0;x<this.levelWidth;x += wallWidth){\r\n      for(let y = 0;y<this.levelHeight;y += wallHeight){\r\n        if(x === 0 && y === 0){\r\n          backWall.parent = tmpBackWall;\r\n          backWall.position = new Vector3(x,y,0);\r\n        }else{\r\n          const newWall = backWall.createInstance(\"wallTile\"+x+\"_\"+y);\r\n          newWall.parent = tmpBackWall;\r\n          newWall.position = new Vector3(x,y,0);\r\n        }\r\n      }\r\n    }\r\n    return tmpBackWall;\r\n  }\r\n\r\n  createFrontWall(scene){\r\n    const frontWall = PlaneBuilder.CreatePlane(\r\n      'frontWall',\r\n      { height: this.levelWidth,width: this.levelHeight},\r\n      scene\r\n    )\r\n    frontWall.visibility = 0;\r\n    frontWall.rotation.z= Math.PI/2;\r\n    frontWall.position.z = -this.levelDepth/2;\r\n    frontWall.position.y = this.levelHeight/2;\r\n    /*frontWall.physicsImpostor = new PhysicsImpostor(\r\n      frontWall,\r\n      PhysicsImpostor.BoxImpostor,\r\n      {mass:0, restitution: 0.1,friction:0.01},\r\n      scene\r\n    );*/\r\n  }\r\n\r\n  createConcreteMaterial(scene){\r\n    const pbr = new PBRMaterial('concrete', scene)\r\n    pbr.forceIrradianceInFragment = true;\r\n    pbr.albedoTexture = new Texture(\"textures/concrete_worn_albedo.png\",scene);\r\n    pbr.bumpTexture = new Texture(\"textures/concrete_worn_normal.png\",scene);\r\n    pbr.useRoughnessFromMetallicTextureAlpha = false;\r\n    pbr.useRoughnessFromMetallicTextureGreen = true;\r\n    pbr.useMetallnessFromMetallicTextureBlue = true;\r\n    pbr.metallicTexture = new Texture(\r\n      \"textures/concrete_worn_metallic_roughness.png\",\r\n      scene\r\n    );\r\n    pbr.invertNormalMapX = true;\r\n    pbr.invertNormalMapY = true;\r\n    return pbr;\r\n  }\r\n\r\n  getBoxWrapUV(width,height,depth,textureSize){\r\n    /*\r\n    side 0 faces the positive z direction\r\n    side 1 faces the negative z direction\r\n    side 2 faces the positive x direction\r\n    side 3 faces the negative x direction\r\n    side 4 faces the positive y direction\r\n    side 5 faces the negative y direction\r\n    */\r\n    const faceUV = new Array(6);\r\n\r\n    for (let i = 0; i < 6; i++) {\r\n      if(i === 0 || i === 1){\r\n        faceUV[i] = new Vector4(0, 0,width/textureSize,height/textureSize);\r\n      }else if(i === 2 || i === 3){\r\n        faceUV[i] = new Vector4(0, 0,height/textureSize,depth/textureSize);\r\n      }else if(i === 4 || i === 5){\r\n        faceUV[i] = new Vector4(0, 0,depth/textureSize,width/textureSize);\r\n      }\r\n    }\r\n    return faceUV;\r\n  }\r\n\r\n  createPlatform(scene){\r\n    const width = 20;\r\n    const height = 2;\r\n    const faceUV = this.getBoxWrapUV(width,height,this.levelDepth,5);\r\n    const platform = BoxBuilder.CreateBox(\r\n      'ceiling',\r\n      { width: width,depth: this.levelDepth,height: height ,faceUV:faceUV},\r\n      scene\r\n    )\r\n    \r\n    platform.position.y = 10;\r\n    platform.material = this.concreteMaterial;\r\n    platform.physicsImpostor = new PhysicsImpostor(\r\n      platform,\r\n      PhysicsImpostor.BoxImpostor,\r\n      {mass:0, restitution: 0.1,friction:0.01},\r\n      scene\r\n    );\r\n    this.sg.getShadowMap().renderList.push(platform);\r\n    platform.receiveShadows = true;\r\n    return platform;\r\n  }\r\n\r\n  createEgg(scene){\r\n    const defaultMaterial = new StandardMaterial('default-material', scene)\r\n    defaultMaterial.diffuseColor = new Color3(1, 1, 1)\r\n    const egg = SphereBuilder.CreateSphere(\r\n      'egg',\r\n      { diameter: 1.5, segments: 16 },\r\n      scene\r\n    );\r\n    egg.material = defaultMaterial;\r\n    egg.position.y = 15;\r\n    //egg.position.z = -this.levelDepth/2;\r\n    this.sg.getShadowMap().renderList.push(egg);\r\n    return egg;\r\n  }\r\n\r\n  rotatePlayer(direction,lastQuaternion){\r\n    console.log(direction);\r\n    if(direction === 0) {\r\n      this.model.rotationQuaternion = lastQuaternion;\r\n    }else{\r\n      const axis = new Vector3(0, 1, 0);\r\n      const angle = direction * (Math.PI / 2) - (Math.PI / 2);\r\n      const quaternion = Quaternion.RotationAxis(axis, angle);\r\n      this.model.rotationQuaternion = quaternion;\r\n    }\r\n  }\r\n\r\n  loadModels(scene){\r\n    this.assetsNum = 4;\r\n    SceneLoader.ImportMesh('walking_left','models/','walking_left.babylon',\r\n      scene,(meshes)=>{\r\n        this.walkingLeft = meshes[0];\r\n        this.checkAssets(this.walkingLeft);\r\n      },\r\n      (e)=>console.log('progress'+e),\r\n      (scene,message)=>console.log('error'+message)\r\n    );\r\n\r\n    SceneLoader.ImportMesh('flying','models/','flying.babylon',\r\n      scene,(meshes)=>{\r\n        this.flying = meshes[0];\r\n        this.checkAssets(this.flying);\r\n      },\r\n      (e)=>console.log('progress'+e),\r\n      (scene,message)=>console.log('error'+message)\r\n    );\r\n\r\n    SceneLoader.ImportMesh('running','models/','running.babylon',\r\n      scene,(meshes)=>{\r\n        this.running = meshes[0];\r\n        this.checkAssets(this.running);\r\n      },\r\n      (e)=>console.log('progress'+e),\r\n      (scene,message)=>console.log('error'+message)\r\n    );\r\n\r\n    SceneLoader.ImportMesh('flapping','models/','flapping.babylon',\r\n      scene,(meshes)=>{\r\n        this.flapping = meshes[0];\r\n        this.checkAssets(this.flapping);\r\n      },\r\n      (e)=>console.log('progress'+e),\r\n      (scene,message)=>console.log('error'+message)\r\n    );\r\n        \r\n  }\r\n\r\n  checkAssets(model){\r\n    model.visibility = 0;\r\n    model.position.x = 5 * this.assetsNum;\r\n    model.position.y = 3.3;\r\n    this.sg.getShadowMap().renderList.push(model);\r\n    this.assetsNum--;\r\n    if(this.assetsNum === 0){\r\n      console.log(\"checkAssets finish\");\r\n    }\r\n  }\r\n\r\n  changePlayerModel(model){\r\n    if(model === this.model){\r\n      return;\r\n    }\r\n    this.model.parent = null;\r\n    this.model.visibility = 0;\r\n    model.visibility = 1;\r\n    const lastQuaternion = this.model.rotationQuaternion;\r\n    this.model = model;\r\n    this.player.addChild(model);\r\n    model.position = new Vector3(0,0.3,0);\r\n    this.rotatePlayer(this.keyDirection,lastQuaternion);\r\n  }\r\n\r\n  createPlayer(scene){\r\n    const player = BoxBuilder.CreateBox(\r\n      \"player\",\r\n      {width:4,height:6.1,depth:2},\r\n      scene\r\n    );\r\n    player.visibility = 0;\r\n    const loader = SceneLoader.ImportMesh('walking','models/',\r\n      'walking.babylon',\r\n      scene,\r\n      (meshes)=>{\r\n        const model = meshes[0];\r\n        model.receiveShadows = true;\r\n        model.position.y = 0.3;\r\n        this.walking = this.model = model;\r\n        player.addChild(model);\r\n        player.position.y = 3;\r\n        player.position.z = 0;\r\n        player.physicsImpostor = new PhysicsImpostor(\r\n          player,\r\n          PhysicsImpostor.SphereImpostor,\r\n          {mass:0.2,restitution: 0,friction:1,stiffness:0},\r\n          scene\r\n        );\r\n        player.physicsImpostor.registerOnPhysicsCollide(\r\n          [this.platform.physicsImpostor,this.land.physicsImpostor],\r\n          this.onPlayerHitGround\r\n        );\r\n        this.sg.getShadowMap().renderList.push(model);\r\n        this.setEggImpostor();\r\n      },\r\n      (e)=>console.log('progress'+e),\r\n      (scene,message)=>console.log('error'+message)\r\n    );  \r\n\r\n    if(ATTACH_CAMERA){\r\n      this.attachCameraToPlayer(player);\r\n    }\r\n    return player;\r\n  }\r\n\r\n  attachCameraToPlayer(player){\r\n    if(this.player){\r\n      player = this.player;\r\n    }\r\n    this.camera.parent = player;\r\n    this.camera.position.y = 3;\r\n  }\r\n\r\n  setEggImpostor(scene){\r\n    this.egg.physicsImpostor = new PhysicsImpostor(\r\n      this.egg,PhysicsImpostor.SphereImpostor,\r\n      {mass:1, restitution: 0.2,friction:0.3},\r\n      this.scene\r\n    );\r\n    this.player.physicsImpostor.registerOnPhysicsCollide(\r\n      this.egg.physicsImpostor,\r\n      this.onPlayerHitEgg\r\n    );\r\n  }\r\n\r\n  onPlayerHitEgg = (main, collided) => {\r\n    this.egg.physicsImpostor.dispose();\r\n    this.egg.parent = this.player;\r\n    this.egg.position = new Vector3((2+1.5)/2,0,0);\r\n  }\r\n\r\n  onPlayerHitGround = (main, collided) => {\r\n    //this.player.getBoundingInfo.\r\n    if(main.object.position.y > collided.object.position.y){\r\n      this.changePlayerModel(this.walking);\r\n    }\r\n    \r\n    if(Math.abs(this.player.physicsImpostor.getLinearVelocity().y) < 4){\r\n      this.touching = true;\r\n    }\r\n  }\r\n\r\n  onSpacePressed = () =>{\r\n    this.changePlayerModel(this.flapping);\r\n    this.resetPlayerVelocity();\r\n    this.sendPlayerFlapImpulse();\r\n    this.touching = false;\r\n  }\r\n\r\n  sendPlayerFlapImpulse(){\r\n    const boost = this.getBoost();\r\n    console.log(\"sendPlayerFlapImpulse boost\"+boost);\r\n    this.player.physicsImpostor.applyImpulse(\r\n      new Vector3(this.keyDirection*0.6*boost, .8, 0),\r\n      this.player.getAbsolutePosition()\r\n    );\r\n  }\r\n\r\n  getBoost(){\r\n    const vel = this.player.physicsImpostor.getLinearVelocity().x;\r\n    return vel/Math.abs(vel) === this.keyDirection ? 1 : 2;\r\n  }\r\n\r\n  isNotSpeeding(){\r\n    return this.player.physicsImpostor.getLinearVelocity().x*this.keyDirection < 7;\r\n  }\r\n\r\n  isTouchingGround(){\r\n    return this.touching;\r\n  }\r\n\r\n  setLowPlayerFriction(){\r\n    this.player.physicsImpostor.friction = 0.1;\r\n    this.land.physicsImpostor.friction = 0.1;\r\n  }\r\n\r\n  setHighPlayerFriction(){\r\n    this.player.physicsImpostor.friction = 1;\r\n    this.land.physicsImpostor.friction = 1;\r\n  }\r\n\r\n  startPlayerMoveInterval(){\r\n    if(!this.accelerateInterval){\r\n      const self = this;\r\n      this.accelerateInterval = setInterval(()=>{\r\n        //console.log(\"setInterval accelerate\");\r\n        self.accelerate.apply(self);\r\n      },200);\r\n    }\r\n  }\r\n\r\n  endPlayerMoveInterval(){\r\n    if(this.accelerateInterval){\r\n      console.log(\"clearInterval\");\r\n      clearInterval(this.accelerateInterval);\r\n      this.accelerateInterval = null;\r\n    }\r\n  }\r\n\r\n  playerHasEgg(){\r\n    return this.player.getChildren().includes(this.egg)\r\n  }\r\n\r\n  launchEgg(){\r\n    this.egg.parent = null;\r\n    this.egg.position = this.player.getAbsolutePosition();\r\n    this.egg.position.x += 5*this.keyDirection;\r\n    this.setEggImpostor();\r\n    this.egg.position.z = 0;\r\n    const vel = this.egg.physicsImpostor.getLinearVelocity();\r\n    vel.z = 0;\r\n    this.egg.physicsImpostor.setLinearVelocity(vel);\r\n    this.egg.physicsImpostor.setAngularVelocity(new Vector3(0,0,0));\r\n    this.egg.rotation = new Vector3(0,0,0);\r\n    this.egg.physicsImpostor.applyImpulse(\r\n      new Vector3(this.keyDirection*20, 0, 0),\r\n      this.egg.getAbsolutePosition()\r\n    );\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    e.preventDefault();\r\n    if (e.key === \" \") {\r\n      this.onSpacePressed();\r\n    }else if(e.key === \"ArrowRight\"){\r\n      this.keyDirection = 1;\r\n      this.rotatePlayer(this.keyDirection);\r\n      this.setLowPlayerFriction();\r\n      this.startPlayerMoveInterval();\r\n    }else if(e.key === \"ArrowLeft\"){\r\n      this.keyDirection = -1;\r\n      this.rotatePlayer(this.keyDirection);\r\n      this.setLowPlayerFriction();\r\n      this.startPlayerMoveInterval();\r\n    }else if(e.key === \"AltGraph\"){\r\n      if(this.playerHasEgg()){\r\n        console.log(\"AltGraph\");\r\n        this.launchEgg();\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeyUp = (e) => {\r\n    e.preventDefault();\r\n    if(e.key === \"ArrowRight\" || e.key === \"ArrowLeft\"){\r\n      this.keyDirection = 0;\r\n      this.endPlayerMoveInterval();\r\n      this.setHighPlayerFriction();\r\n    }else if(e.key === \" \"){\r\n      this.changePlayerModel(this.flying);\r\n    }\r\n  }\r\n\r\n  resetPlayerVelocity = () => {\r\n    if(!this.player || !this.player.physicsImpostor){\r\n      return;\r\n    }\r\n    const vel = this.player.physicsImpostor.getLinearVelocity();\r\n    vel.z = 0;\r\n    this.player.physicsImpostor.setLinearVelocity(vel);\r\n    //this.player.position.z = this.levelDepth/2;\r\n    this.player.physicsImpostor.setAngularVelocity(new Vector3(0,0,0));\r\n    //this can't work, must use quaternion\r\n    this.player.rotation = new Vector3(0,0,0);\r\n  }\r\n\r\n  accelerate(){\r\n    this.resetPlayerVelocity();\r\n    if( this.keyDirection !== 0 &&\r\n          this.isNotSpeeding() &&\r\n          this.isTouchingGround() ){\r\n      this.sendPlayerStepImpulse();\r\n    }\r\n  }\r\n\r\n  sendPlayerStepImpulse(){\r\n    const boost = this.getBoost();\r\n    this.player.physicsImpostor.applyImpulse(\r\n      new Vector3(this.keyDirection*1*boost, 0, 0),\r\n      this.player.getAbsolutePosition()\r\n    );\r\n  }\r\n\r\n  showWorldAxis = ({ size, scene }) => {\r\n    const axisX = LinesBuilder.CreateLines(\r\n      'axisX',\r\n      {\r\n        points: [Vector3.Zero(), new Vector3(size, 0, 0)]\r\n      },\r\n      scene\r\n    )\r\n    axisX.color = new Color3(1, 0, 0)\r\n    const axisY = LinesBuilder.CreateLines(\r\n      'axisY',\r\n      {\r\n        points: [Vector3.Zero(), new Vector3(0, size, 0)]\r\n      },\r\n      scene\r\n    )\r\n    axisY.color = new Color3(0, 1, 0)\r\n    const axisZ = LinesBuilder.CreateLines(\r\n      'axisZ',\r\n      {\r\n        points: [Vector3.Zero(), new Vector3(0, 0, size)]\r\n      },\r\n      scene\r\n    )\r\n    axisZ.color = new Color3(0, 0, 1)\r\n  }\r\n\r\n  // initialise scene rendering\r\n  render(){\r\n    return <BabylonScene \r\n              onSceneMount={this.onSceneMount}\r\n              onKeyDown={this.onKeyDown}\r\n              onKeyUp={this.onKeyUp}\r\n              onRender={this.resetPlayerVelocity}\r\n            />\r\n  }\r\n}\r\n\r\nexport default Playground\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Playground from './components/Playground'\n\nconst App = () => <Playground />\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}